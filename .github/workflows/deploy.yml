name: Deploy via SSH (Hostinger split app/public)

on:
  push:
    branches: [ main ]

env:
  SUBDIR: vibe-playlistsw

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SUBDIR: vibe-playlistsw
      HOST:    ${{ secrets.HOST_SSH_HOST  || secrets.SSH_HOST }}
      PORT:    ${{ secrets.HOST_SSH_PORT  || secrets.SSH_PORT || '22' }}
      USER:    ${{ secrets.HOST_SSH_USER  || secrets.SSH_USER }}
      APP_DIR: ${{ secrets.HOST_APP_DIR   || secrets.APP_DIR }}
      PUB_DIR: ${{ secrets.HOST_PUBLIC_DIR|| secrets.PUBLIC_DIR }}


    steps:
      - name: Checkout
        uses: actions/checkout@v4

- name: Prepare SSH
  shell: bash
  run: |
    mkdir -p ~/.ssh
    printf "%s" "${{ secrets.HOST_SSH_KEY || secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
    tr -d '\r' < ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.clean && mv ~/.ssh/id_ed25519.clean ~/.ssh/id_ed25519
    chmod 600 ~/.ssh/id_ed25519

    PORT="${PORT:-22}"                 # default if missing
    echo "Using SSH host: $HOST, port: $PORT"
    ssh-keyscan -p "$PORT" "$HOST" >> ~/.ssh/known_hosts 2>/dev/null



      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build assets (Vite)
        working-directory: ./${{ env.SUBDIR }}
        run: |
          npm ci
          npm run build

      - name: Create tarball to upload
        run: |
          tar -C "${{ env.SUBDIR }}" -czf /tmp/app.tar.gz \
            --exclude='.git' --exclude='node_modules' --exclude='vendor' .

      - name: Upload bundle to server
        shell: bash
        run: |
          PORT="${PORT:-22}"
          scp -i ~/.ssh/id_ed25519 -P "$PORT" /tmp/app.tar.gz \
            "$USER@$HOST:/home/$USER/app.tar.gz"

      - name: Deploy on server (composer + artisan)
        shell: bash
        run: |
          PORT="${PORT:-22}"
          ssh -i ~/.ssh/id_ed25519 -p "$PORT" "$USER@$HOST" bash -euo pipefail -lc "
            mkdir -p \"$APP_DIR\" \"$PUB_DIR\"
            tar -xzf ~/app.tar.gz -C \"$APP_DIR\"
            rm -f ~/app.tar.gz

            # install composer locally if missing
            if ! command -v composer >/dev/null 2>&1; then
              mkdir -p ~/bin
              php -r \"copy('https://getcomposer.org/installer','composer-setup.php');\"
              php composer-setup.php --install-dir=\$HOME/bin --filename=composer
              rm composer-setup.php
              export PATH=\"\$HOME/bin:\$PATH\"
            fi

            cd \"$APP_DIR\"
            composer install --no-dev --prefer-dist --optimize-autoloader

            php artisan key:generate --force || true
            php artisan migrate --force || true
            php artisan config:cache && php artisan route:cache && php artisan view:cache || true

            # ensure Hostinger public points into Laravel public
            cp -f \"$APP_DIR/index.hostinger.php\" \"$PUB_DIR/index.php\"
          "
